service: web-api

frameworkVersion: '2'
useDotenv: true

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: eu-west-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

  environment:
    MONGO_URL: ${env:MONGO_URL}

# you can add packaging information here
#package:
#  patterns:
#    - '!exclude-me.js'
#    - '!exclude-me-dir/**'
#    - include-me.js
#    - include-me-dir/**

functions:
  # HTTP
  getCurrentWeather:
    handler: src/handler.getCurrentWeather
    events:
      - http:
          path: weather/current
          method: get
  getDailyWeatherForecast:
    handler: src/handler.getDailyWeatherForecast
    events:
      - http:
          path: weather/forecast/daily
          method: get
  getHourlyWeatherForecast:
    handler: src/handler.getHourlyWeatherForecast
    events:
      - http:
          path: weather/forecast/hourly
          method: get
  getMinutelyWeatherForecast:
    handler: src/handler.getMinutelyWeatherForecast
    events:
      - http:
          path: weather/forecast/minutely
          method: get

plugins:
  - serverless-plugin-typescript
  - serverless-offline
